
o Make it work, goddamit!
  o implement pattern from http://flask.readthedocs.org/en/0.1/patterns/

o Rewrite the task storage to use the sql-based persistence.
  o Make the acceptance tests work.

o Make config file that lets us run sqllite in tests on workstation
  and postgresql in production.  We should also be able to run
  postgresql tests on the workstation.

o Write management scripts for elastic beanstalk that will let us
  create a new database instance when required.

o Necessary refactoring:
  o Esthetics
      - Read throught the coding standards for Python and become
        more compliant
      - Better esthetics, documentation and readability
      - Get someone with practice in python programming to critique the code
      - Get some gerrit-like service to use for that?

  o Make the metadata contain some automatically generated fields,
     and then a separate namespace for the user-provided data.  This
     will be -exactly- the same schema we need to use for tasks.
     That is a symmetry we may be able to use in some way. 
   o The content/metadata  API is a bit screwed.  It needs to be
       refactored into prettiness asap.
   o Then the whole test infrastructure needs to be brought
      in line with this refactoring, then we can proceed.

o Possibly useful features
  o Oauth? Using Google IDs or perhaps Yahoo IDs.
  o Ensure that we can upload big data objects (images, movies)

o Actually doing something useful
  o Make a small worker that does something to an image.
  o Write some code that actually uses the ting to do something useful,
    such as identifying images with faces.

