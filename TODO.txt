o Refactor
  - Write at least one test that checks cascading deletes of
    media with associated meta-items.
  - Fix XXXes all over the place.  There are way too many bloopers now.
  - Avoid internal camelcases
  - Add comments to methods, use best practices
  - Consider extendig test coverage to some more 
    things that looks brittle.

o Add users
  o Initially, add API users.  They should have an userid and an
    associated "API key" that are used through http simple 
    authentication to get access.
  o Then we should have OAUth users, that log in using
    google/yahoo/facebook/whatever authentication
    to access "their" data, and trigger agents
    to work on their behalf.

o Extend functionality to a level where it's actually useful to 
  the task at hand.

o Make the metadata management sane.
  o Redesign API.
  o Write tests to ensure workitude.

o Write management scripts for elastic beanstalk that will let us
  create a new database instance when required.

o Necessary refactoring:
  o Esthetics
      - Read throught the coding standards for Python and become
        more compliant
      - Better esthetics, documentation and readability
      - Get someone with practice in python programming to critique the code
      - Get some gerrit-like service to use for that?

  o Make the metadata contain some automatically generated fields,
     and then a separate namespace for the user-provided data.  This
     will be -exactly- the same schema we need to use for tasks.
     That is a symmetry we may be able to use in some way. 
   o The content/metadata  API is a bit screwed.  It needs to be
       refactored into prettiness asap.
   o Then the whole test infrastructure needs to be brought
      in line with this refactoring, then we can proceed.

o Possibly useful features
  o Identity
  o Ownership
  o Access control lists
  o Oauth? Using Google IDs or perhaps Yahoo IDs.
  o Ensure that we can upload really big data objects (images, movies)

o Actually doing something useful
  o Make a small worker that does something to an image.
  o Write some code that actually uses the ting to do something useful,
    such as identifying images with faces.

